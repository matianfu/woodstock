// this class retrieve data from object tree generated by xml2js 
class DBusInterfaceDefinition {
  constructor (data) {
    this.data = data
    Object.defineProperty(this, 'name', {
      get: () => {
        return this.data.$.name
      }
    })
  }

  // return a signature
  method (name) {
    if (this.data && this.data.method) {
      let m = this.data.method.find(o => o.$.name === name)
      if (m) return m.arg.map(x => x.$)
    }
  }

  signal (name) {
  }

  property (name) {
  }

  // return [[name, sig]]
  properties () {
    if (!this.data.property) return []
    return this.data.property.map(o => [o.$.name, o.$.type, o.$.direction])
      
      

    console.dir(this.data, { depth: 20 }) 

    throw new Error()
  }
}

module.exports = DBusInterfaceDefinition
