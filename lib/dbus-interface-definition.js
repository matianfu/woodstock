// this class retrieve data from object tree generated by xml2js 
class DBusInterfaceDefinition {
  constructor (data) {
    this.data = data
    Object.defineProperty(this, 'name', {
      get: () => {
        return this.data.$.name
      }
    })
  }

  // return [{ direction: 'in' or 'out', type: 'sig' }]

  /**
  return the signature of the method
  @param {string} name - method name 
  @returns { object || undefined }
  */
  method (name) {
    if (this.data && this.data.method) {
      let m = this.data.method.find(o => o.$.name === name)
      if (m) return m.arg ? m.arg.map(x => x.$) : []
    }
  }

  signal (name) {
  }

  property (name) {
  }

  // return [[name, sig]]
  properties () {
    let props = []
    if (this.data.property) {
      props = this.data.property.map(o => [o.$.name, o.$.type, o.$.direction])
    }
    return props
  }
}

module.exports = DBusInterfaceDefinition
